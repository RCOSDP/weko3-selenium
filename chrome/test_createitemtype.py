# Generated by Selenium IDE
import pytest
import time
import json
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options

class TestCreateitemtype():
  def setup_method(self, method):
    # use headless mode
    options = Options()
    # options.add_argument('--headless')
    self.driver = webdriver.Chrome(options=options)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_createitemtype(self):
    # Test name: create itemtype
    # Step # | name | target | value | comment
    # 1 | open | / |  | 
    self.driver.get(os.environ['WEKO3_HOST'])
    # 2 | setWindowSize | 1646x976 |  | 
    self.driver.set_window_size(1646, 976)
    # 3 | click | linkText=Log in |  | 
    self.driver.find_element(By.LINK_TEXT, "Log in").click()
    # 4 | click | id=email |  | 
    self.driver.find_element(By.ID, "email").click()
    # 5 | type | id=email | info@inveniosoftware.org | 
    self.driver.find_element(By.ID, "email").send_keys("info@inveniosoftware.org")
    # 6 | type | id=password | uspass123 | 
    self.driver.find_element(By.ID, "password").send_keys("uspass123")
    # 7 | sendKeys | id=password | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)
    # 8 | click | css=#header_nav > .container-fluid |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#header_nav > .container-fluid").click()
    # 9 | click | linkText=info@inveniosoftware.org |  | 
    self.driver.find_element(By.LINK_TEXT, "info@inveniosoftware.org").click()
    # 10 | click | linkText=Administration |  | 
    self.driver.find_element(By.LINK_TEXT, "Administration").click()
    # 11 | click | linkText=Item Types |  | 
    self.driver.find_element(By.LINK_TEXT, "Item Types").click()
    # 12 | click | linkText=Meta |  | 
    self.driver.find_element(By.LINK_TEXT, "Meta").click()
    # 13 | click | id=itemtype_name |  | 
    self.driver.find_element(By.ID, "itemtype_name").click()
    # 14 | type | id=itemtype_name | data2 | 
    self.driver.find_element(By.ID, "itemtype_name").send_keys("data2")
    # 15 | click | id=btn_new_itemtype_meta |  | 
    self.driver.find_element(By.ID, "btn_new_itemtype_meta").click()
    # 16 | click | id=select_input_type_item_1570959927393 |  | 
    self.driver.find_element(By.ID, "select_input_type_item_1570959927393").click()
    # 17 | select | id=select_input_type_item_1570959927393 | label=H_Title | 
    dropdown = self.driver.find_element(By.ID, "select_input_type_item_1570959927393")
    dropdown.find_element(By.XPATH, "//option[. = 'H_Title']").click()
    # 18 | click | id=txt_title_item_1570959927393 |  | 
    self.driver.find_element(By.ID, "txt_title_item_1570959927393").click()
    # 19 | type | id=txt_title_item_1570959927393 | Title | 
    self.driver.find_element(By.ID, "txt_title_item_1570959927393").send_keys("Title")
    # 20 | click | id=chk_item_1570959927393_0 |  | 
    self.driver.find_element(By.ID, "chk_item_1570959927393_0").click()
    # 21 | click | id=btn_new_itemtype_meta |  | 
    self.driver.find_element(By.ID, "btn_new_itemtype_meta").click()
    # 22 | mouseOver | id=btn_new_itemtype_meta |  | 
    element = self.driver.find_element(By.ID, "btn_new_itemtype_meta")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 23 | mouseOut | id=btn_new_itemtype_meta |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 24 | click | id=select_input_type_item_1570959939365 |  | 
    self.driver.find_element(By.ID, "select_input_type_item_1570959939365").click()
    # 25 | select | id=select_input_type_item_1570959939365 | label=File | 
    dropdown = self.driver.find_element(By.ID, "select_input_type_item_1570959939365")
    dropdown.find_element(By.XPATH, "//option[. = 'File']").click()
    # 26 | click | id=txt_title_item_1570959939365 |  | 
    self.driver.find_element(By.ID, "txt_title_item_1570959939365").click()
    # 27 | type | id=txt_title_item_1570959939365 | File | 
    self.driver.find_element(By.ID, "txt_title_item_1570959939365").send_keys("File")
    # 28 | click | id=btn_new_itemtype_meta |  | 
    self.driver.find_element(By.ID, "btn_new_itemtype_meta").click()
    # 29 | mouseOver | id=btn_new_itemtype_meta |  | 
    element = self.driver.find_element(By.ID, "btn_new_itemtype_meta")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 30 | mouseOut | id=btn_new_itemtype_meta |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 31 | click | id=select_input_type_item_1570959967308 |  | 
    self.driver.find_element(By.ID, "select_input_type_item_1570959967308").click()
    # 32 | select | id=select_input_type_item_1570959967308 | label=bibInfo2 | 
    dropdown = self.driver.find_element(By.ID, "select_input_type_item_1570959967308")
    dropdown.find_element(By.XPATH, "//option[. = 'bibInfo2']").click()
    # 33 | click | id=txt_title_item_1570959967308 |  | 
    self.driver.find_element(By.ID, "txt_title_item_1570959967308").click()
    # 34 | type | id=txt_title_item_1570959967308 | Ref | 
    self.driver.find_element(By.ID, "txt_title_item_1570959967308").send_keys("Ref")
    # 35 | click | css=#chk_prev_item_1570959967308_1 > label |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#chk_prev_item_1570959967308_1 > label").click()
    # 36 | click | id=btn_create_itemtype_schema |  | 
    self.driver.find_element(By.ID, "btn_create_itemtype_schema").click()
    # 37 | click | css=.caret |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".caret").click()
    # 38 | click | linkText=Logout |  | 
    self.driver.find_element(By.LINK_TEXT, "Logout").click()
  
