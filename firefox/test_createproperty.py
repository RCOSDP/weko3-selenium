# Generated by Selenium IDE
import pytest
import time
import json
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

class TestCreateproperty():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_createproperty(self):
    # Test name: create property
    # Step # | name | target | value | comment
    # 1 | open | / |  | 
    self.driver.get(os.environ['WEKO3_HOST'])
    # 2 | setWindowSize | 1646x976 |  | 
    self.driver.set_window_size(1646, 976)
    # 3 | click | linkText=Log in |  | 
    self.driver.find_element(By.LINK_TEXT, "Log in").click()
    # 4 | click | id=email |  | 
    self.driver.find_element(By.ID, "email").click()
    # 5 | type | id=email | info@inveniosoftware.org | 
    self.driver.find_element(By.ID, "email").send_keys("info@inveniosoftware.org")
    # 6 | type | id=password | uspass123 | 
    self.driver.find_element(By.ID, "password").send_keys("uspass123")
    # 7 | sendKeys | id=password | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)
    # 8 | click | linkText=info@inveniosoftware.org |  | 
    self.driver.find_element(By.LINK_TEXT, "info@inveniosoftware.org").click()
    # 9 | click | linkText=Administration |  | 
    self.driver.find_element(By.LINK_TEXT, "Administration").click()
    # 10 | click | linkText=Item Types |  | 
    self.driver.find_element(By.LINK_TEXT, "Item Types").click()
    # 11 | click | linkText=Properties |  | 
    self.driver.find_element(By.LINK_TEXT, "Properties").click()
    # 12 | click | id=property_name |  | 
    self.driver.find_element(By.ID, "property_name").click()
    # 13 | type | id=property_name | bibInfo | 
    self.driver.find_element(By.ID, "property_name").send_keys("bibInfo")
    # 14 | click | id=schema_json |  | 
    self.driver.find_element(By.ID, "schema_json").click()
    # 15 | type | id=schema_json | {\n    "format": "object",\n    "properties": {\n        "authors": {\n            "format": "text",\n            "title": "Authors",\n            "type": "string"\n        },\n        "identifier": {\n            "format": "text",\n            "title": "Identifier",\n            "type": "string"\n        },\n        "journal": {\n            "format": "text",\n            "title": "Journal",\n            "type": "string"\n        },\n        "number": {\n            "format": "text",\n            "title": "Number",\n            "type": "string"\n        },\n        "pages": {\n            "format": "text",\n            "title": "Pages",\n            "type": "string"\n        },\n        "title": {\n            "format": "text",\n            "title": "Title",\n            "type": "string"\n        },\n        "volume": {\n            "format": "text",\n            "title": "Volume",\n            "type": "string"\n        },\n        "year": {\n            "format": "text",\n            "title": "Year",\n            "type": "string"\n        }\n    },\n    "type": "object"\n} | 
    self.driver.find_element(By.ID, "schema_json").send_keys("{\\n    \"format\": \"object\",\\n    \"properties\": {\\n        \"authors\": {\\n            \"format\": \"text\",\\n            \"title\": \"Authors\",\\n            \"type\": \"string\"\\n        },\\n        \"identifier\": {\\n            \"format\": \"text\",\\n            \"title\": \"Identifier\",\\n            \"type\": \"string\"\\n        },\\n        \"journal\": {\\n            \"format\": \"text\",\\n            \"title\": \"Journal\",\\n            \"type\": \"string\"\\n        },\\n        \"number\": {\\n            \"format\": \"text\",\\n            \"title\": \"Number\",\\n            \"type\": \"string\"\\n        },\\n        \"pages\": {\\n            \"format\": \"text\",\\n            \"title\": \"Pages\",\\n            \"type\": \"string\"\\n        },\\n        \"title\": {\\n            \"format\": \"text\",\\n            \"title\": \"Title\",\\n            \"type\": \"string\"\\n        },\\n        \"volume\": {\\n            \"format\": \"text\",\\n            \"title\": \"Volume\",\\n            \"type\": \"string\"\\n        },\\n        \"year\": {\\n            \"format\": \"text\",\\n            \"title\": \"Year\",\\n            \"type\": \"string\"\\n        }\\n    },\\n    \"type\": \"object\"\\n}")
    # 16 | click | id=rebuild |  | 
    self.driver.find_element(By.ID, "rebuild").click()
    # 17 | click | id=previews |  | 
    self.driver.find_element(By.ID, "previews").click()
    # 18 | click | id=sending |  | 
    self.driver.find_element(By.ID, "sending").click()
    # 19 | click | css=.modal-footer > .btn |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".modal-footer > .btn").click()
    # 20 | click | id=item-type-lists |  | 
    self.driver.find_element(By.ID, "item-type-lists").click()
    # 21 | click | id=property_name |  | 
    self.driver.find_element(By.ID, "property_name").click()
    # 22 | type | id=property_name | bibInfo2 | 
    self.driver.find_element(By.ID, "property_name").send_keys("bibInfo2")
    # 23 | click | id=sending |  | 
    self.driver.find_element(By.ID, "sending").click()
    # 24 | click | css=.modal-footer > .btn |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".modal-footer > .btn").click()
    # 25 | click | linkText=info@inveniosoftware.org |  | 
    self.driver.find_element(By.LINK_TEXT, "info@inveniosoftware.org").click()
    # 26 | click | linkText=Logout |  | 
    self.driver.find_element(By.LINK_TEXT, "Logout").click()
  
