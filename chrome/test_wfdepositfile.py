# Generated by Selenium IDE
import pytest
import time
import json
import os
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options

class TestWfdepositfile():
  def setup_method(self, method):
    # use headless mode
    options = Options()
    # options.add_argument('--headless')
    self.driver = webdriver.Chrome(options=options)
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_wfdepositfile(self):
    # Test name: wf deposit file
    # Step # | name | target | value | comment
    # 1 | open | / |  | 
    self.driver.get(os.environ['WEKO3_HOST'])
    # 2 | setWindowSize | 1646x976 |  | 
    self.driver.set_window_size(1646, 976)
    # 3 | click | linkText=Log in |  | 
    self.driver.find_element(By.LINK_TEXT, "Log in").click()
    # 4 | type | id=email | info@inveniosoftware.org | 
    self.driver.find_element(By.ID, "email").send_keys("info@inveniosoftware.org")
    # 5 | type | id=password | uspass123 | 
    self.driver.find_element(By.ID, "password").send_keys("uspass123")
    # 6 | sendKeys | id=password | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)
    # 7 | click | linkText=WorkFlow |  | 
    self.driver.find_element(By.LINK_TEXT, "WorkFlow").click()
    # 8 | click | linkText=New Activity |  | 
    self.driver.find_element(By.LINK_TEXT, "New Activity").click()
    # 9 | click | id=btn-begin-1 |  | 
    self.driver.find_element(By.ID, "btn-begin-1").click()
    # 10 | click | css=.text-center:nth-child(3) > .btn |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".text-center:nth-child(3) > .btn").click()
    # 11 | click | css=.btn:nth-child(3) |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(3)").click()
    # 12 | click | name=pubdate |  | 
    self.driver.find_element(By.NAME, "pubdate").click()
    # 13 | click | css=.ng-scope:nth-child(1) > .text-center:nth-child(4) .ng-binding |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(1) > .text-center:nth-child(4) .ng-binding").click()
    # 14 | click | id=subitem_1551255647225 |  | 
    self.driver.find_element(By.ID, "subitem_1551255647225").click()
    # 15 | type | id=subitem_1551255647225 | Sample.pdf | 
    self.driver.find_element(By.ID, "subitem_1551255647225").send_keys("Sample.pdf")
    # 16 | click | name=subitem_1551255648112 |  | 
    self.driver.find_element(By.NAME, "subitem_1551255648112").click()
    # 17 | select | name=subitem_1551255648112 | label=en | 
    dropdown = self.driver.find_element(By.NAME, "subitem_1551255648112")
    dropdown.find_element(By.XPATH, "//option[. = 'en']").click()
    # 18 | click | name=filename |  | 
    self.driver.find_element(By.NAME, "filename").click()
    # 19 | select | name=filename | label=sample.pdf | 
    dropdown = self.driver.find_element(By.NAME, "filename")
    dropdown.find_element(By.XPATH, "//option[. = 'sample.pdf']").click()
    # 20 | click | name=displaytype |  | 
    self.driver.find_element(By.NAME, "displaytype").click()
    # 21 | select | name=displaytype | label=プレビュー | 
    dropdown = self.driver.find_element(By.NAME, "displaytype")
    dropdown.find_element(By.XPATH, "//option[. = 'プレビュー']").click()
    # 22 | click | name=licensetype |  | 
    self.driver.find_element(By.NAME, "licensetype").click()
    # 23 | select | name=licensetype | label=Creative Commons : 表示 | 
    dropdown = self.driver.find_element(By.NAME, "licensetype")
    dropdown.find_element(By.XPATH, "//option[. = 'Creative Commons : 表示']").click()
    # 24 | click | name=item_1570959939365.0.accessrole |  | 
    self.driver.find_element(By.NAME, "item_1570959939365.0.accessrole").click()
    # 25 | click | id=authors |  | 
    self.driver.find_element(By.ID, "authors").click()
    # 26 | type | id=authors | John Doe | 
    self.driver.find_element(By.ID, "authors").send_keys("John Doe")
    # 27 | type | id=identifier | https://doi.org/ | 
    self.driver.find_element(By.ID, "identifier").send_keys("https://doi.org/")
    # 28 | click | id=journal |  | 
    self.driver.find_element(By.ID, "journal").click()
    # 29 | type | id=journal | Test Journal | 
    self.driver.find_element(By.ID, "journal").send_keys("Test Journal")
    # 30 | type | id=number | 1 | 
    self.driver.find_element(By.ID, "number").send_keys("1")
    # 31 | type | id=pages | 12-13 | 
    self.driver.find_element(By.ID, "pages").send_keys("12-13")
    # 32 | click | id=title |  | 
    self.driver.find_element(By.ID, "title").click()
    # 33 | type | id=title | Test Title | 
    self.driver.find_element(By.ID, "title").send_keys("Test Title")
    # 34 | type | id=volume | 2 | 
    self.driver.find_element(By.ID, "volume").send_keys("2")
    # 35 | type | id=year | 2019 | 
    self.driver.find_element(By.ID, "year").send_keys("2019")
    # 36 | click | css=.ng-scope:nth-child(4) > .schema-form-array .btn |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(4) > .schema-form-array .btn").click()
    # 37 | mouseOver | css=.ng-scope:nth-child(4) > .schema-form-array .btn |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(4) > .schema-form-array .btn")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 38 | mouseOut | css=.ng-scope:nth-child(4) > .schema-form-array .btn |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 39 | click | css=.ng-scope:nth-child(4) > .schema-form-array .list-group-item:nth-child(1) |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(4) > .schema-form-array .list-group-item:nth-child(1)").click()
    # 40 | click | css=.list-group-item:nth-child(2) #authors |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #authors").click()
    # 41 | type | css=.list-group-item:nth-child(2) #authors | John Doe | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #authors").send_keys("John Doe")
    # 42 | click | css=.ng-scope:nth-child(4) > .schema-form-array .list-group-item:nth-child(1) .schema-form-section |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ng-scope:nth-child(4) > .schema-form-array .list-group-item:nth-child(1) .schema-form-section").click()
    # 43 | click | css=.list-group-item:nth-child(2) #identifier |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #identifier").click()
    # 44 | type | css=.list-group-item:nth-child(2) #identifier | https://doi.org/ | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #identifier").send_keys("https://doi.org/")
    # 45 | click | css=.list-group-item:nth-child(1) .ng-scope:nth-child(3) > .schema-form-text |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(1) .ng-scope:nth-child(3) > .schema-form-text").click()
    # 46 | click | css=.list-group-item:nth-child(2) #journal |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #journal").click()
    # 47 | type | css=.list-group-item:nth-child(2) #journal | Test Journal2 | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #journal").send_keys("Test Journal2")
    # 48 | click | css=.list-group-item:nth-child(1) .ng-scope:nth-child(5) .col-sm-9 |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(1) .ng-scope:nth-child(5) .col-sm-9").click()
    # 49 | click | css=.list-group-item:nth-child(1) .ng-scope:nth-child(6) > .schema-form-text |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(1) .ng-scope:nth-child(6) > .schema-form-text").click()
    # 50 | click | css=.list-group-item:nth-child(2) #title |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #title").click()
    # 51 | type | css=.list-group-item:nth-child(2) #title | Test Title2 | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #title").send_keys("Test Title2")
    # 52 | click | css=.list-group-item:nth-child(2) #number |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #number").click()
    # 53 | type | css=.list-group-item:nth-child(2) #number | 1 | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #number").send_keys("1")
    # 54 | click | css=.list-group-item:nth-child(2) #pages |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #pages").click()
    # 55 | type | css=.list-group-item:nth-child(2) #pages | 20-23 | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #pages").send_keys("20-23")
    # 56 | click | css=.list-group-item:nth-child(2) #volume |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #volume").click()
    # 57 | type | css=.list-group-item:nth-child(2) #volume | 1 | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #volume").send_keys("1")
    # 58 | click | css=.list-group-item:nth-child(2) #year |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #year").click()
    # 59 | type | css=.list-group-item:nth-child(2) #year | 2019 | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(2) #year").send_keys("2019")
    # 60 | click | css=.list-inline > .btn-info |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-inline > .btn-info").click()
    # 61 | click | css=tree-internal:nth-child(1) input |  | 
    self.driver.find_element(By.CSS_SELECTOR, "tree-internal:nth-child(1) input").click()
    # 62 | mouseOver | css=tree-internal:nth-child(2) input |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "tree-internal:nth-child(2) input")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 63 | click | css=tree-internal:nth-child(2) tree-internal:nth-child(2) input |  | 
    self.driver.find_element(By.CSS_SELECTOR, "tree-internal:nth-child(2) tree-internal:nth-child(2) input").click()
    # 64 | mouseOver | css=tree-internal:nth-child(2) tree-internal:nth-child(2) input |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "tree-internal:nth-child(2) tree-internal:nth-child(2) input")
    actions = ActionChains(driver)
    actions.move_to_element(element).perform()
    # 65 | mouseOut | css=tree-internal:nth-child(2) tree-internal:nth-child(2) input |  | 
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(driver)
    actions.move_to_element(element, 0, 0).perform()
    # 66 | click | css=.next-button |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".next-button").click()
    # 67 | click | id=btn-finish |  | 
    self.driver.find_element(By.ID, "btn-finish").click()
    # 68 | click | id=btn-approval |  | 
    self.driver.find_element(By.ID, "btn-approval").click()
    # 69 | click | linkText=Top |  | 
    self.driver.find_element(By.LINK_TEXT, "Top").click()
    # 70 | click | css=tree-internal:nth-child(2) .value-container |  | 
    self.driver.find_element(By.CSS_SELECTOR, "tree-internal:nth-child(2) .value-container").click()
    # 71 | click | css=tree-internal:nth-child(2) .node-name |  | 
    self.driver.find_element(By.CSS_SELECTOR, "tree-internal:nth-child(2) .node-name").click()
    # 72 | click | css=.list-group-item:nth-child(1) .ng-binding:nth-child(2) |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".list-group-item:nth-child(1) .ng-binding:nth-child(2)").click()
    # 73 | click | linkText=Sample.pdf |  | 
    self.driver.find_element(By.LINK_TEXT, "Sample.pdf").click()
    # 74 | click | css=.dropdown-toggle |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-toggle").click()
    # 75 | click | linkText=info@inveniosoftware.org |  | 
    self.driver.find_element(By.LINK_TEXT, "info@inveniosoftware.org").click()
    # 76 | click | css=#header_nav > .container-fluid |  | 
    self.driver.find_element(By.CSS_SELECTOR, "#header_nav > .container-fluid").click()
    # 77 | click | css=.dropdown-toggle |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".dropdown-toggle").click()
    # 78 | click | linkText=Log out |  | 
    self.driver.find_element(By.LINK_TEXT, "Log out").click()
  
